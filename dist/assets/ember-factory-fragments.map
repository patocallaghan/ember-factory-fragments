{"version":3,"sources":["vendor/ember-cli/app-prefix.js","ember-factory-fragments/adapters/application.js","ember-factory-fragments/app.js","ember-factory-fragments/components/app-version.js","ember-factory-fragments/controllers/application.js","ember-factory-fragments/helpers/pluralize.js","ember-factory-fragments/helpers/singularize.js","ember-factory-fragments/initializers/app-version.js","ember-factory-fragments/initializers/container-debug-adapter.js","ember-factory-fragments/initializers/ember-data-factory-guy.js","ember-factory-fragments/initializers/export-application-global.js","ember-factory-fragments/models/city.js","ember-factory-fragments/models/country.js","ember-factory-fragments/models/region.js","ember-factory-fragments/models/state.js","ember-factory-fragments/models/weather.js","ember-factory-fragments/resolver.js","ember-factory-fragments/router.js","ember-factory-fragments/routes/application.js","ember-factory-fragments/routes/example.js","ember-factory-fragments/serializers/application.js","ember-factory-fragments/serializers/country.js","ember-factory-fragments/serializers/region.js","ember-factory-fragments/services/ajax.js","ember-factory-fragments/templates/application.js","ember-factory-fragments/templates/example.js","ember-factory-fragments/transforms/array.js","ember-factory-fragments/transforms/fragment-array.js","ember-factory-fragments/transforms/fragment.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","define('ember-factory-fragments/adapters/application', ['exports', 'ember-data'], function (exports, _emberData) {\n  exports['default'] = _emberData['default'].RESTAdapter.extend();\n});","define('ember-factory-fragments/app', ['exports', 'ember', 'ember-factory-fragments/resolver', 'ember-load-initializers', 'ember-factory-fragments/config/environment'], function (exports, _ember, _emberFactoryFragmentsResolver, _emberLoadInitializers, _emberFactoryFragmentsConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _emberFactoryFragmentsConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _emberFactoryFragmentsConfigEnvironment['default'].podModulePrefix,\n    Resolver: _emberFactoryFragmentsResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _emberFactoryFragmentsConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('ember-factory-fragments/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'ember-factory-fragments/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _emberFactoryFragmentsConfigEnvironment) {\n\n  var name = _emberFactoryFragmentsConfigEnvironment['default'].APP.name;\n  var version = _emberFactoryFragmentsConfigEnvironment['default'].APP.version;\n\n  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({\n    version: version,\n    name: name\n  });\n});","define('ember-factory-fragments/controllers/application', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller.extend({});\n});","define('ember-factory-fragments/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {\n  exports['default'] = _emberInflectorLibHelpersPluralize['default'];\n});","define('ember-factory-fragments/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {\n  exports['default'] = _emberInflectorLibHelpersSingularize['default'];\n});","define('ember-factory-fragments/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'ember-factory-fragments/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _emberFactoryFragmentsConfigEnvironment) {\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_emberFactoryFragmentsConfigEnvironment['default'].APP.name, _emberFactoryFragmentsConfigEnvironment['default'].APP.version)\n  };\n});","define('ember-factory-fragments/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {\n  exports['default'] = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('ember-factory-fragments/initializers/ember-data-factory-guy', ['exports', 'ember-data-factory-guy/utils/manual-setup'], function (exports, _emberDataFactoryGuyUtilsManualSetup) {\n  exports['default'] = {\n    name: 'ember-data-factory-guy',\n    after: 'ember-data',\n\n    initialize: function initialize(application) {\n      if (arguments.length > 1) {\n        application = arguments[1];\n      }\n      var container = application.__container__;\n      (0, _emberDataFactoryGuyUtilsManualSetup['default'])(container);\n    }\n  };\n});","define('ember-factory-fragments/initializers/export-application-global', ['exports', 'ember', 'ember-factory-fragments/config/environment'], function (exports, _ember, _emberFactoryFragmentsConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_emberFactoryFragmentsConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var value = _emberFactoryFragmentsConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_emberFactoryFragmentsConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!window[globalName]) {\n        window[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete window[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('ember-factory-fragments/models/city', ['exports', 'ember-data'], function (exports, _emberData) {\n  exports['default'] = _emberData['default'].Model.extend({\n    name: _emberData['default'].attr()\n  });\n});","define('ember-factory-fragments/models/country', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {\n  exports['default'] = _emberData['default'].Model.extend({\n    name: _emberData['default'].attr(),\n    cities: _emberData['default'].hasMany('city'),\n    weather: _modelFragments['default'].fragment('weather'),\n    // states: DS.hasMany('state'),\n    regions: _emberData['default'].hasMany('region')\n  });\n});","define('ember-factory-fragments/models/region', ['exports', 'ember-data'], function (exports, _emberData) {\n  exports['default'] = _emberData['default'].Model.extend({\n    name: _emberData['default'].attr('string'),\n    capital: _emberData['default'].belongsTo('city')\n  });\n});","define('ember-factory-fragments/models/state', ['exports', 'ember-data'], function (exports, _emberData) {\n  exports['default'] = _emberData['default'].Model.extend({\n    name: _emberData['default'].attr()\n  });\n});","define('ember-factory-fragments/models/weather', ['exports', 'ember-data', 'model-fragments'], function (exports, _emberData, _modelFragments) {\n  exports['default'] = _modelFragments['default'].Fragment.extend({\n    temperature: _emberData['default'].attr('number'),\n    description: _emberData['default'].attr('string')\n  });\n});","define('ember-factory-fragments/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  exports['default'] = _emberResolver['default'];\n});","define('ember-factory-fragments/router', ['exports', 'ember', 'ember-factory-fragments/config/environment'], function (exports, _ember, _emberFactoryFragmentsConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _emberFactoryFragmentsConfigEnvironment['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route('example');\n  });\n\n  exports['default'] = Router;\n});","define('ember-factory-fragments/routes/application', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({\n    model: function model() {\n      return this.store.findAll('country', 1);\n    }\n  });\n});","define('ember-factory-fragments/routes/example', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Route.extend({\n    model: function model() {\n      this.store.findRecord('country', 1);\n    }\n  });\n});","define('ember-factory-fragments/serializers/application', ['exports', 'ember', 'ember-data'], function (exports, _ember, _emberData) {\n\n  var restSerializer = _emberData['default'].RESTSerializer.create();\n\n  exports['default'] = _emberData['default'].JSONSerializer.extend({\n    serialize: function serialize(snapshot) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      options.includeId = true;\n      return this._super(snapshot, options);\n    },\n    keyForAttribute: function keyForAttribute(attr) {\n      return _ember['default'].String.decamelize(attr);\n    },\n    keyForRelationship: function keyForRelationship(attr) {\n      return _ember['default'].String.decamelize(attr);\n    },\n    modelNameFromPayloadKey: restSerializer.modelNameFromPayloadKey,\n    pushPayload: restSerializer.pushPayload\n  });\n});","define('ember-factory-fragments/serializers/country', ['exports', 'ember-data', 'ember-factory-fragments/serializers/application'], function (exports, _emberData, _emberFactoryFragmentsSerializersApplication) {\n  exports['default'] = _emberFactoryFragmentsSerializersApplication['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {\n    attrs: {\n      cities: { embedded: 'always' },\n      weather: { embedded: 'always' },\n      regions: {\n        serialize: false,\n        deserialize: 'records'\n      }\n    }\n  });\n});","define('ember-factory-fragments/serializers/region', ['exports', 'ember-data', 'ember-factory-fragments/serializers/application'], function (exports, _emberData, _emberFactoryFragmentsSerializersApplication) {\n  exports['default'] = _emberFactoryFragmentsSerializersApplication['default'].extend(_emberData['default'].EmbeddedRecordsMixin, {\n    attrs: {\n      capital: {\n        key: 'capital_id'\n      }\n    }\n  });\n});","define('ember-factory-fragments/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberAjaxServicesAjax['default'];\n    }\n  });\n});","define(\"ember-factory-fragments/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.4.3\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 12,\n                \"column\": 6\n              },\n              \"end\": {\n                \"line\": 14,\n                \"column\": 6\n              }\n            },\n            \"moduleName\": \"ember-factory-fragments/templates/application.hbs\"\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);\n            return morphs;\n          },\n          statements: [[\"content\", \"city.name\", [\"loc\", [null, [13, 12], [13, 25]]]]],\n          locals: [\"city\"],\n          templates: []\n        };\n      })();\n      var child1 = (function () {\n        return {\n          meta: {\n            \"fragmentReason\": false,\n            \"revision\": \"Ember@2.4.3\",\n            \"loc\": {\n              \"source\": null,\n              \"start\": {\n                \"line\": 28,\n                \"column\": 6\n              },\n              \"end\": {\n                \"line\": 31,\n                \"column\": 6\n              }\n            },\n            \"moduleName\": \"ember-factory-fragments/templates/application.hbs\"\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createTextNode(\"Name: \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"li\");\n            var el2 = dom.createTextNode(\"Capital: \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(2);\n            morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 1, 1);\n            morphs[1] = dom.createMorphAt(dom.childAt(fragment, [3]), 1, 1);\n            return morphs;\n          },\n          statements: [[\"content\", \"region.name\", [\"loc\", [null, [29, 18], [29, 33]]]], [\"content\", \"region.capital.name\", [\"loc\", [null, [30, 21], [30, 44]]]]],\n          locals: [\"region\"],\n          templates: []\n        };\n      })();\n      return {\n        meta: {\n          \"fragmentReason\": false,\n          \"revision\": \"Ember@2.4.3\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 4,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 35,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"ember-factory-fragments/templates/application.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"ID: \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"Name: \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"hr\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"\\n    Cities:\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"ul\");\n          var el4 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"hr\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"\\n    Weather:\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"ul\");\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"li\");\n          var el5 = dom.createTextNode(\"Temperature: \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"li\");\n          var el5 = dom.createTextNode(\"Description: \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"li\");\n          var el3 = dom.createTextNode(\"\\n    Regions:\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"ul\");\n          var el4 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [0]);\n          var element1 = dom.childAt(element0, [11, 1]);\n          var morphs = new Array(6);\n          morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 1, 1);\n          morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);\n          morphs[2] = dom.createMorphAt(dom.childAt(element0, [7, 1]), 1, 1);\n          morphs[3] = dom.createMorphAt(dom.childAt(element1, [1]), 1, 1);\n          morphs[4] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);\n          morphs[5] = dom.createMorphAt(dom.childAt(element0, [13, 1]), 1, 1);\n          return morphs;\n        },\n        statements: [[\"content\", \"country.id\", [\"loc\", [null, [6, 10], [6, 24]]]], [\"content\", \"country.name\", [\"loc\", [null, [7, 12], [7, 28]]]], [\"block\", \"each\", [[\"get\", \"country.cities\", [\"loc\", [null, [12, 14], [12, 28]]]]], [], 0, null, [\"loc\", [null, [12, 6], [14, 15]]]], [\"content\", \"country.weather.temperature\", [\"loc\", [null, [21, 23], [21, 54]]]], [\"content\", \"country.weather.description\", [\"loc\", [null, [22, 23], [22, 54]]]], [\"block\", \"each\", [[\"get\", \"country.regions\", [\"loc\", [null, [28, 14], [28, 29]]]]], [], 1, null, [\"loc\", [null, [28, 6], [31, 15]]]]],\n        locals: [\"country\"],\n        templates: [child0, child1]\n      };\n    })();\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\"multiple-nodes\", \"wrong-type\"]\n        },\n        \"revision\": \"Ember@2.4.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 38,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"ember-factory-fragments/templates/application.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        dom.setAttribute(el1, \"id\", \"title\");\n        var el2 = dom.createTextNode(\"Welcome to Ember\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h3\");\n        var el2 = dom.createTextNode(\"This is a 'Country' model\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(fragment, 4, 4, contextualElement);\n        morphs[1] = dom.createMorphAt(fragment, 6, 6, contextualElement);\n        return morphs;\n      },\n      statements: [[\"block\", \"each\", [[\"get\", \"model\", [\"loc\", [null, [4, 8], [4, 13]]]]], [], 0, null, [\"loc\", [null, [4, 0], [35, 9]]]], [\"content\", \"outlet\", [\"loc\", [null, [37, 0], [37, 10]]]]],\n      locals: [],\n      templates: [child0]\n    };\n  })());\n});","define(\"ember-factory-fragments/templates/example\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\"multiple-nodes\"]\n        },\n        \"revision\": \"Ember@2.4.3\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 50\n          }\n        },\n        \"moduleName\": \"ember-factory-fragments/templates/example.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"Example!\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"test__model-name\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(dom.childAt(fragment, [2]), 0, 0);\n        return morphs;\n      },\n      statements: [[\"content\", \"model.name\", [\"loc\", [null, [2, 30], [2, 44]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define(\"ember-factory-fragments/transforms/array\", [\"exports\"], function (exports) {\n  exports[\"default\"] = MF.ArrayTransform;\n});","define(\"ember-factory-fragments/transforms/fragment-array\", [\"exports\"], function (exports) {\n  exports[\"default\"] = MF.FragmentArrayTransform;\n});","define(\"ember-factory-fragments/transforms/fragment\", [\"exports\"], function (exports) {\n  exports[\"default\"] = MF.FragmentTransform;\n});","/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('ember-factory-fragments/config/environment', ['ember'], function(Ember) {\n  var prefix = 'ember-factory-fragments';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\nif (!runningTests) {\n  require(\"ember-factory-fragments/app\")[\"default\"].create({\"name\":\"ember-factory-fragments\",\"version\":\"0.0.0+6a1ac42f\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;;ACJA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"ember-factory-fragments.js"}